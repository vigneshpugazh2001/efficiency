#!/bin/bash
TIMES=.times

echo "======================================="
echo "==   efficiency test of $1"
echo "======================================="
# try various thread counts for efficiency
EFFICIENT_ENOUGH="NOT CHECKED"
for NT in 1 2 4 8; do
    for CHUNKSIZE in 5 500000 1000000; do
        for SCHEDULE in static dynamic guided; do
        

    echo "$NT threads:"
    echo -n "  correctness: "
    # run with the correct number of threads
    export OMP_NUM_THREADS=$NT
    export OMP_SCHEDULE="${SCHEDULE},${CUNKSIZE}"
    /usr/bin/time -p ./$1 2> $TIMES
    # pull out the wallclock (real) time, convert to ms
    WALLTIME=`grep real $TIMES | awk '{print 1000*$2}'`
    if [[ -z $WALLTIME_1 ]]; then
        # save reference times for 1 thread
        WALLTIME_1=$WALLTIME
    fi
    # calculate speedup and efficiency (use awk for better formatting of floats)
    WT_SPEEDUP=`echo $WALLTIME_1 $WALLTIME | awk '{printf("%.1f", $1 / $2);}'`
    WT_EFFICIENCY=`echo $WALLTIME_1 $WALLTIME $NT | awk '{printf("%3.0f", 100 * $1 / ($3 * $2));}'`
    echo " threads: $NT    chunksize: $CHUNKSIZE    schedule: $SCHEDULE    efficiency: $WT_EFFICIENCY %" >> test.csv
    # grading criteria - 75% efficiency for 4 threads
    if [[  $NT = "4" ]]; then
        EFFICIENT_ENOUGH=`echo $WT_EFFICIENCY | awk '{if ($1 >= 75) print "PASSES"; else print "FAILS"};'`
    fi
done
done
done

echo ">> efficiency test overall: $EFFICIENT_ENOUGH"